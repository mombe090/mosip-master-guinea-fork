# Install a fresh new system (optional)
install

# Specify installation method to use for installation
# To use a different one comment out the 'url' one below, update
# the selected choice with proper options & un-comment it
cdrom

# Set language to use during installation and the default language to use on the installed system (required)
lang en_US.UTF-8

# Set system keyboard type / layout (required)
keyboard us

# Configure network information for target system and activate network devices in the installer environment (optional)
# --onboot	enable device at a boot time
# --device	device to be activated and / or configured with the network command
# --bootproto	method to obtain networking configuration for device (default dhcp)
# --noipv6	disable IPv6 on this device
# To use static IP configuration,
network --bootproto=static --ip=192.168.9.249 --netmask=255.255.255.0 --gateway=192.168.9.1 --nameserver 192.168.9.254,197.149.224.10,197.147.225.11 --hostname packer-templ
#network --onboot yes --device ens192 --bootproto dhcp --noipv6 --hostname CentOS7Template

# Set the system's root password (required)


rootpw --iscrypted $6$sms9eFuh81m66V42$oxsEd9YamgKE.3vo44WDox8FKblgpB/ogHlBAJm.vtWFiXJa/g8lpD0IDB.kiXdp5Yu1V2OUB1nURyqaoZ.b00

user --name=wuri --iscrypted --password=$6$8FrrNIZXUZrEMTq0$KSEX8tjppHGN9cQBDN8qXea.yv7GkyOOjXMMrFtJb1EZRcctSepF0vac.ChZOTpFrblju0N.VMw8c184r1SwJ.

# Configure firewall settings for the system (optional)
# --enabled	reject incoming connections that are not in response to outbound requests
# --ssh		allow sshd service through the firewall
# firewall --enabled --ssh
firewall --disabled

# Set up the authentication options for the system (required)
# --enableshadow	enable shadowed passwords by default
# --passalgo		hash / crypt algorithm for new passwords
# See the manual page for authconfig for a complete list of possible options.
authconfig --enableshadow --passalgo=sha512

# State of SELinux on the installed system (optional)
# Defaults to enforcing
selinux --permissive

# Set the system time zone (required)
timezone --utc Africa/Conakry

### Partitioning
clearpart --all --initlabel

# Specify how the bootloader should be installed (required)
# Plaintext password is: password
bootloader --location=mbr --append="crashkernel=auto rhgb quiet" --password=$6$rhel6usgcb$kOzIfC4zLbuo3ECp1er99NRYikN419wxYMmons8Vm/37Qtg0T8aB9dKxHwqapz8wWAFuVkuI/UJqQBU92bA5C0

part /boot --label=boot --fstype=xfs --size=2048 --asprimary
part pv.01 --size=1 --grow

volgroup vg-sys pv.01
logvol /        --vgname=vg-sys --name=root --fstype=xfs --size=204800
logvol /var     --vgname=vg-sys --name=var  --fstype=xfs --size=100352

# Packages selection
%packages --ignoremissing
Require @Base
@Base
@core
sed
perl
less
dmidecode
bzip2
iproute
iputils
sysfsutils
rsync
nano
mdadm
setserial
man-pages.noarch
findutils
tar
net-tools
tmpwatch
lsof
python
screen
lvm2
curl
ypbind
yp-tools
smartmontools
openssh-clients
acpid
irqbalance
which
bind-utils
ntsysv
ntp
man
#mysql
postfix
chkconfig
gzip
%end 
# End of %packages section

%post
sudo yum update -y
sudo yum upgrade -y
chkconfig ntpd on
chkconfig sshd on
chkconfig ypbind on
chkconfig iptables off
chkconfig ip6tables off
chkconfig yum-updatesd off
chkconfig haldaemon off
chkconfig mcstrans off
chkconfig sysstat off
sudo yum install vim -y
# Install open-vm-tools, required to detect IP when building on ESXi
yum -y install open-vm-tools
systemctl enable vmtoolsd
systemctl start vmtoolsd



SUDOERS_FILE=sudoers
SSHD_CONFIG=sshd_config
cp /etc/${SUDOERS_FILE}{,.bak}
(
SUDOERS_FILE=sudoers
sed 's/^Defaults[[:space:]]\+requiretty/Defaults  !requiretty/' /etc/${SUDOERS_FILE} > /tmp/${SUDOERS_FILE}
mv /tmp/${SUDOERS_FILE} /etc/${SUDOERS_FILE}
sed 's/^Defaults[[:space:]]\+!visiblepw/Defaults   visiblepw/' /etc/${SUDOERS_FILE} > /tmp/${SUDOERS_FILE}
mv /tmp/${SUDOERS_FILE} /etc/${SUDOERS_FILE}
)
chown root:root /etc/${SUDOERS_FILE}
chmod 0660 /etc/${SUDOERS_FILE}
echo "wuri ALL = (ALL)  NOPASSWD: ALL" >> /etc/${SUDOERS_FILE}
                  (
                  mkdir /home/wuri/.ssh
                  chmod 0700 /home/wuri/.ssh
                  cd /home/wuri/.ssh
                  echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaWixF4By/w5z/LGxhXeal8bSHy0OFgwUDqy+I/piGDICOoI/0N4wtmTFCagdG+LPPWC8maesC+5giVw6A9QPrzAq/qiy9t2e4zgJixqC1LWqiTD3zJtzEMPn+DuAo4yOeMrrlCrXVOspFggFuT5j1uj5fOhiiZsYdu0uqzVhnq8zdqqMuRawTpT716AsbvbSwbreAVmUbvx1oHAWNWLAG7hNig7dBobFCZxrUPg68A0m998ejbEm46aL3JoihuIdDaDOTkgoNyCb6mOYNZELpg8EheGsxLt85uqPlO//zKMu6BArJD7krcHfnZZ6qORDKR1TyjVzde0HSgEr4j1br macbook@MOMBE-MAC" > authorized_keys
                  chmod 0600 authorized_keys
                  chown wuri:wuri authorized_keys
                  cd /home/wuri
chown wuri:wuri /home/wuri/.ssh
)
(
SSHD_CONFIG=sshd_config
sed 's/^[[:space:]]*#*UseDNS[[:space:]]\+yes/UseDNS no/' /etc/ssh/${SSHD_CONFIG} > /tmp/${SSHD_CONFIG}
mv /tmp${SSHD_CONFIG} /etc/ssh/${SSHD_CONFIG}
)
chown root:root /etc/ssh/${SSHD_CONFIG}
chmod 0600 /etc/ssh/${SSHD_CONFIG}
%end

# Reboot after the installation is complete (optional)
# --eject	attempt to eject CD or DVD media before rebooting
reboot --eject
